<!-- sections/product-specification.liquid -->

<section id="product-specification-section" class="product-spec-section page-width">
  <div class="accordion-container">
    <!-- Product Description Accordion -->
    {% if product.description != blank %}
      <div class="accordion-item">
        <button class="accordion-header">
          <span><strong>Product Description</strong></span>
          <span class="accordion-icon">+</span>
        </button>
        <div class="accordion-content">
          <div class="product-description">
            {{ product.description }}
          </div>
        </div>
      </div>
    {% endif %}

    <!-- Specification Accordion -->

    {%- assign spec_mf = product.metafields.custom.specification -%}

    {%- if spec_mf != blank -%}
      {%- comment %} Prefer .value for JSON metafields; fallback to parse_json if metafield is plain text. {%- endcomment %}
      {%- assign specifications = spec_mf.value -%}
      {%- if specifications == blank -%}
        {%- assign specifications = spec_mf | default: '{}' | parse_json -%}
      {%- endif -%}

      {%- if specifications != blank and specifications.size > 0 -%}
        <div class="accordion-item">
          <button class="accordion-header">
            <span><strong>Product Specifications</strong></span>
            <span class="accordion-icon">+</span>
          </button>
          <div class="accordion-content">
            <table class="specification-table">
              <tbody>
                {%- for spec in specifications -%}
                {%- assign label = spec[0] | replace: '_', ' ' | capitalize -%}
                {%- assign value = spec[1] -%}
                {%- if value != blank -%}
                     <tr>
                  <td> <strong>{{ label }}</strong></td>
                  <td>{{ value }}</td>
                </tr>
                
                {%- endif -%}
              {%- endfor -%}
              </tbody>
            </table>

            <ul class="specification-list">
              {%- for spec in specifications -%}
                {%- assign label = spec[0] | replace: '_', ' ' | capitalize -%}
                {%- assign value = spec[1] -%}
                {%- if value != blank -%}
                  <li>
                    <strong>{{ label }}:</strong> {{ value }}
                  </li>
                {%- endif -%}
              {%- endfor -%}
            </ul>
          </div>
        </div>
      {%- endif -%}
    {%- endif -%}

    <!-- Product Data Sheets Accordion -->
    {%- assign ds_mf = product.metafields.custom.data_sheet -%}

    {%- if ds_mf != blank -%}
      {%- comment %} Prefer .value for JSON metafields; fallback to parse_json if it's a string. {%- endcomment %}
      {%- assign data_sheets = ds_mf.value -%}
      {%- if data_sheets == blank -%}
        {%- assign data_sheets = ds_mf | default: '[]' | parse_json -%}
      {%- endif -%}

      {%- if data_sheets and data_sheets.size > 0 -%}
        <div class="accordion-item">
          <button class="accordion-header">
            <span
              ><strong
                >Product Data Sheets <span class="data-sheet-number--count">{{ data_sheets.size }}</span></strong
              ></span
            >
            <span class="accordion-icon">+</span>
          </button>
          <div class="accordion-content">
            <ul class="data-sheet-list">
              {%- for sheet in data_sheets -%}
                {%- assign sheet_name = sheet.name | default: sheet.name | default: 'Download PDF' -%}
                {%- assign sheet_url = sheet.url | default: sheet.url -%}
                {%- if sheet_url != blank -%}
                  <li>
                    <a href="{{ sheet_url }}" target="_blank" rel="noopener noreferrer">
                      {{ sheet_name }}
                    </a>
                  </li>
                {%- endif -%}
              {%- endfor -%}
            </ul>
          </div>
        </div>
      {%- endif -%}
    {%- endif -%}
  </div>
</section>

<style>
    .accordion-container {
      max-width: 69%;
      margin: 30px 0;
      background-color: #fff;
    }

    .accordion-container {
      border: none;

    }

    /* Accordion Header */
    .accordion-header {
      width: 100%;
      text-align: left;
      background-color: #fff;
      padding: 15px 0px;
        font-size: 18px;
     font-family:'MyriadPro';
      cursor: pointer;
      display: flex;
      justify-content: space-between;
      align-items: center;
      transition: background 0.3s ease;
      border:none;
       border-bottom: 1px solid #e5e5e5;
    }

    .accordion-item.active .accordion-content
    {
        border-bottom: 1px solid #e5e5e5;
        margin-bottom: 0px;
    }
     .accordion-item.active .accordion-header
  {
      border-bottom: none;
  }

    .accordion-icon {
      font-size: 20px;
      font-weight: bold;
      transition: transform 0.3s ease;
    }


    .accordion-content {
      max-height: 0;
      overflow: hidden;
       padding: 0px 0;
      background-color: #fff;
      transition: max-height 0.4s ease, padding 0.3s ease;
    }

    .accordion-item.active .accordion-content {
      padding: 15px 0;
      max-height: 1200px;
    }

    /* Table Styling */
    /* Main Table Styling */
.specification-table {
  width: 100%;
  border-collapse: collapse;
  font-family: Arial, sans-serif;
  font-size: 15px;
  margin: 10px 0;
  border: 1px solid #ddd;
}

/* Table Cells */
.specification-table td {
  padding: 10px 15px;
  border: 1px solid #ddd;
  color: #333;
}

/* First Column Styling */
.specification-table td:first-child {
  font-weight: bold;
  background-color: #f9f9f9;
  width: 35%;
}

/* Second Column Styling */
.specification-table td:last-child {
  color: #444;
  width: 65%;
}

/* Alternate Row Background */
.specification-table tr:nth-child(even) {
  background-color: #f5f5f5;
}

/* Hover Effect */
.specification-table tr:hover {
  background-color: #f0f0f0;
  transition: background-color 0.2s ease;
}


    /* Data Sheet Links */
    .data-sheet-list {
      list-style: none;
      padding-left: 5px;
      margin-top: 10px;
    }

    .data-sheet-list li {
      margin: 8px 0;
    }

    .data-sheet-list a {
      color: #0073e6;
      text-decoration: none;
      font-weight: 600;
      font-size: 15px;
    }

    .data-sheet-list a:hover {
      text-decoration: underline;
    }
    p.subheading {
      margin-bottom: 25px;
  }
  span.data-sheet-number--count {
    background: #F7F7F8;
      font-size: 10px;
      padding: 5px;
      border-radius: 8px;
      border: 1px solid #F7F7F8;
      position: absolute;
      right: 20px;
      top: 18px;
      width: 25px;
      height: 25px;
      display: inline-flex;
      justify-content: center;
  }
  .accordion-header
  {
  position: relative;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const accordionHeaders = document.querySelectorAll('.accordion-header');

    accordionHeaders.forEach((header) => {
      header.addEventListener('click', function () {
        const parent = this.parentElement;
        const icon = this.querySelector('.accordion-icon');

        // Toggle active class for accordion
        parent.classList.toggle('active');

        // Change icon based on state
        if (parent.classList.contains('active')) {
          icon.textContent = 'âˆ’'; // Open state
        } else {
          icon.textContent = '+'; // Closed state
        }
      });
    });
  });
</script>
