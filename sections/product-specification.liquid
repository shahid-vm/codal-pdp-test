<!-- sections/product-specification.liquid -->

<section id="product-specification-section" class="product-spec-section page-width">
  <div class="accordion-container">
    <!-- Product Description Accordion -->
    {% if product.description != blank %}
      <div class="accordion-item">
        <button class="accordion-header">
          <span><strong>Product Description</strong></span>
          <span class="accordion-icon">+</span>
        </button>
        <div class="accordion-content">
          <div class="product-description">
            {{ product.description }}
          </div>
        </div>
      </div>
    {% endif %}

    <!-- Specification Accordion -->

    {%- assign spec_mf = product.metafields.custom.specification -%}

    {%- if spec_mf != blank -%}
      {%- comment %} Prefer .value for JSON metafields; fallback to parse_json if metafield is plain text. {%- endcomment %}
      {%- assign specifications = spec_mf.value -%}
      {%- if specifications == blank -%}
        {%- assign specifications = spec_mf | default: '{}' | parse_json -%}
      {%- endif -%}

      {%- if specifications != blank and specifications.size > 0 -%}
        <div class="accordion-item">
          <button class="accordion-header">
            <span><strong>Product Specifications</strong></span>
            <span class="accordion-icon">+</span>
          </button>
          <div class="accordion-content">
            <ul class="specification-list">
              {%- for spec in specifications -%}
                {%- assign label = spec[0] | replace: '_', ' ' | capitalize -%}
                {%- assign value = spec[1] -%}
                {%- if value != blank -%}
                  <li>
                    <strong>{{ label }}:</strong> {{ value }}
                  </li>
                {%- endif -%}
              {%- endfor -%}
            </ul>
          </div>
        </div>
      {%- endif -%}
    {%- endif -%}

    <!-- Product Data Sheets Accordion -->
    {%- assign ds_mf = product.metafields.custom.data_sheet -%}

    {%- if ds_mf != blank -%}
      {%- comment %} Prefer .value for JSON metafields; fallback to parse_json if it's a string. {%- endcomment %}
      {%- assign data_sheets = ds_mf.value -%}
      {%- if data_sheets == blank -%}
        {%- assign data_sheets = ds_mf | default: '[]' | parse_json -%}
      {%- endif -%}

      {%- if data_sheets and data_sheets.size > 0 -%}
        <div class="accordion-item">
          <button class="accordion-header">
            <span><strong>Product Data Sheets ({{ data_sheets.size }})</strong></span>
            <span class="accordion-icon">+</span>
          </button>
          <div class="accordion-content">
            <ul class="data-sheet-list">
              {%- for sheet in data_sheets -%}
                {%- assign sheet_name = sheet.name | default: sheet.name | default: 'Download PDF' -%}
                {%- assign sheet_url = sheet.url | default: sheet.url -%}
                {%- if sheet_url != blank -%}
                  <li>
                    <a href="{{ sheet_url }}" target="_blank" rel="noopener noreferrer">
                      {{ sheet_name }}
                    </a>
                  </li>
                {%- endif -%}
              {%- endfor -%}
            </ul>
          </div>
        </div>
      {%- endif -%}
    {%- endif -%}
  </div>
</section>

<style>
  /* General Container Styling */
  .product-spec-section {
    max-width: 850px;
    margin: 30px auto;
    background-color: #fff;
  }

  .accordion-container {
    border: none;
   
  }

  /* Accordion Header */
  .accordion-header {
    width: 100%;
    text-align: left;
    background-color: #fff;
    padding: 15px 0px;
      font-size: 18px;
   font-family:'MyriadPro';
    cursor: pointer;
    display: flex;
    justify-content: space-between;
    align-items: center;
    transition: background 0.3s ease;
    border:none;
     border-bottom: 1px solid #e5e5e5;
  }

  .accordion-item.active .accordion-content
  {
      border-bottom: 1px solid #e5e5e5;
      margin-bottom: 0px;
  }
   .accordion-item.active .accordion-header
{
    border-bottom: none;
}

  .accordion-icon {
    font-size: 20px;
    font-weight: bold;
    transition: transform 0.3s ease;
  }

  /* Accordion Content with Smooth Animation */
  .accordion-content {
    max-height: 0;
    overflow: hidden;
     padding: 15px 0;
    background-color: #fff;
    transition: max-height 0.4s ease, padding 0.3s ease;
  }

  .accordion-item.active .accordion-content {
    padding: 15px 0;
    max-height: 1200px;
  }

  /* Table Styling */
  .spec-table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 10px;
  }

  .spec-table td {
    padding: 10px 12px;
    border: 1px solid #e1e1e1;
    font-size: 15px;
  }

  .spec-key {
    font-weight: bold;
    width: 40%;
    background-color: #f7f7f7;
  }

  .spec-value {
    color: #333;
  }

  /* Data Sheet Links */
  .data-sheet-list {
    list-style: none;
    padding-left: 5px;
    margin-top: 10px;
  }

  .data-sheet-list li {
    margin: 8px 0;
  }

  .data-sheet-list a {
    color: #0073e6;
    text-decoration: none;
    font-weight: 600;
    font-size: 15px;
  }

  .data-sheet-list a:hover {
    text-decoration: underline;
  }
  p.subheading {
    margin-bottom: 25px;
}


</style>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const accordionHeaders = document.querySelectorAll('.accordion-header');

    accordionHeaders.forEach((header) => {
      header.addEventListener('click', function () {
        const parent = this.parentElement;
        const icon = this.querySelector('.accordion-icon');

        // Toggle active class for accordion
        parent.classList.toggle('active');

        // Change icon based on state
        if (parent.classList.contains('active')) {
          icon.textContent = 'âˆ’'; // Open state
        } else {
          icon.textContent = '+'; // Closed state
        }
      });
    });
  });
</script>
